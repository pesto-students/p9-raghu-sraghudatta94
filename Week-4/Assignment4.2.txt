var Person = function(){

};
Person.prototype.initialize = function(name,age){

this.name= name;
this.age= age;
}

var Teacher = function(name ,age){

Person.call(this, name);
Person.call(this, age);
}

Object.setPrototypeOf(Teacher.prototype,Person.prototype);
Teacher.prototype.teach = function(id){
this.id = id;
return `${this.name} is now teaching ${this.id}`
}
var him =new Teacher();

him.initialize("Adam",45);
console.log(him);

console.log("new function");
console.log(him.teach("Inheritance"));


//in above code,Teacher inherits from Person,Teacher.prototype inherites from Person.prototype,So ALL method of Person.prototype able to inherites in Teacher ,due to which teacher can use initialize meathod which is present in Person.prototype and also use its own methos which is teach and display output as shown in screenshot